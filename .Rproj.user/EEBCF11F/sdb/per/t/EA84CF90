{
    "contents" : "##########################################################################################################\n\n## Getting and Cleaning Data Course Project\n## Weichen Ouyang\n## 2015-01-24\n\n## Major routines of this script\n\n# 0. Download and unzip the raw data into the working directory.\n# 1. Merge the training and the test sets to create one data set.\n# 2. Extract only the measurements on the mean and standard deviation for each measurement. \n# 3. Use descriptive activity names to name the activities in the data set\n# 4. Appropriately label the data set with descriptive activity names. \n# 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject. \n\n##########################################################################################################\n\n#### 0. Download and unzip the raw data into the working directory.\n\n\nif(!file.exists(\"./data\")){dir.create(\"./data\")}\nfileUrl <- \"https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\"\ndownload.file(fileUrl,destfile=\"./data/RawData.zip\")\n\nunzip(zipfile=\"./data/RawData.zip\",exdir=\"./data\")\npath<-file.path(\"./data\" , \"UCI HAR Dataset\")\n\n#### 1. Merge the training and the test sets to create one data set.\n\n#Load Data into separate data frame\n\nTestData  <- read.table(file.path(path, \"test\" , \"X_test.txt\" ),header = FALSE)\nTrainData <- read.table(file.path(path, \"train\", \"X_train.txt\"),header = FALSE)\n\nActivityTest  <- read.table(file.path(path, \"test\" , \"Y_test.txt\" ),header = FALSE)\nActivityTrain <- read.table(file.path(path, \"train\", \"Y_train.txt\"),header = FALSE)\n\nSubjectTrain <- read.table(file.path(path, \"train\", \"subject_train.txt\"),header = FALSE)\nSubjectTest  <- read.table(file.path(path, \"test\" , \"subject_test.txt\"),header = FALSE)\n\n#Merge gathered measure Data using row-binding\ndataMeasures<- rbind(TrainData, TestData)\n\n#Merge subject Data using row-binding\ndataSubject <- rbind(SubjectTrain, SubjectTest)\nnames(dataSubject)<-c(\"subject\")\n\n#Merge activity Data using row-binding\ndataActivity<- rbind(ActivityTrain, ActivityTest)\nnames(dataActivity)<- c(\"activity\")\n\n#Load colomn names from features.txt, then update the column name of measure data\ndataMeasuresNames <- read.table(file.path(path, \"features.txt\"),head=FALSE)\nnames(dataMeasures)<- dataMeasuresNames$V2\n\n#Merge the activity, subject, measures data using column-binding, generate a single table called \"Data\"\ndataCombine <- cbind(dataSubject, dataActivity)\nData <- cbind(dataCombine,dataMeasures)\n\n\n#### 2. Extract only the measurements on the mean and standard deviation for each measurement. \n\n#Identify selected measure names\nsubdataMeasuresNames<-dataMeasuresNames$V2[grep(\"mean\\\\(\\\\)|std\\\\(\\\\)\", dataMeasuresNames$V2)]\nselectedMeasures<-c(\"subject\", \"activity\", as.character(subdataMeasuresNames))\n\n#subset the Data\nData<-subset(Data,select=selectedMeasures)\n\n\n#### 3. Use descriptive activity names to name the activities in the data set\n\n#Load the activity name corresponding to each activity type in Data table\nactivityLabels <- read.table(file.path(path, \"activity_labels.txt\"),header = FALSE)\n\n#replace the activity type with the name\nData[, 2] <- activityLabels[Data[, 2], 2]\n\n\n#### 4. Appropriately label the data set with descriptive activity names. \n\n\n#Using gsub() to change the column names\nnames(Data)<-gsub(\"\\\\()\", \"\", names(Data))\nnames(Data)<-gsub(\"^t\", \"time\", names(Data))\nnames(Data)<-gsub(\"^f\", \"frequency\", names(Data))\nnames(Data)<-gsub(\"Acc\", \"Accelerometer\", names(Data))\nnames(Data)<-gsub(\"Gyro\", \"Gyroscope\", names(Data))\nnames(Data)<-gsub(\"Mag\", \"Magnitude\", names(Data))\nnames(Data)<-gsub(\"BodyBody\", \"Body\", names(Data))\nnames(Data)<-gsub(\"-std$\",\"StdDev\", names(Data))\nnames(Data)<-gsub(\"-mean\",\"Mean\", names(Data))\n\n# 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject. \n\n#aggregate the Data table along subject and activity demensions to create a new data table called tidyData\nlibrary(plyr);\ntidyData<-aggregate(. ~subject + activity, Data, mean)\ntidyData<-arrange(tidyData,subject,activity)\n\n#output\nwrite.table(tidyData, file = \"tidydata.txt\",row.name=FALSE)",
    "created" : 1422213738985.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1508737357",
    "id" : "EA84CF90",
    "lastKnownWriteTime" : 1422223228,
    "path" : "C:/Users/luke/Desktop/GettingCleaningData/GettingCleaningDataCourseProject/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}